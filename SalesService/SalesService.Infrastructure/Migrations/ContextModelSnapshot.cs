// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesService.Infrastructure.Context;

#nullable disable

namespace SalesService.Infrastructure.Migrations
{
    [DbContext(typeof(Context.Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesService.Domain.Entities.Customer.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customer", "customer");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.Inventory.Inventory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<int>("Amount")
                        .HasColumnType("INT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("ProductId");

                    b.ToTable("Inventory", "inventory");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.Inventory.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<decimal>("Discount")
                        .HasColumnType("DECIMAL(8,2)");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(8,2)");

                    b.Property<byte>("ProductStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Product", "inventory");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.Sale.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("ProductAmount")
                        .HasColumnType("TINYINT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ProductUnitDiscount")
                        .HasColumnType("DECIMAL(8,2)");

                    b.Property<decimal>("ProductUnitPrice")
                        .HasColumnType("DECIMAL(8,2)");

                    b.Property<byte>("SaleStatus")
                        .HasColumnType("TINYINT");

                    b.Property<decimal>("SaleTotalPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("SoldBy")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("SoldIn")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Sale", "sale");
                });
#pragma warning restore 612, 618
        }
    }
}
